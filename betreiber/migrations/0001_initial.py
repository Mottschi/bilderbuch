# Generated by Django 4.1.3 on 2022-11-28 18:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deletion', models.DateTimeField(blank=True, default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Autoren',
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
        ),
        migrations.CreateModel(
            name='Buch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.CharField(max_length=150)),
                ('title', models.CharField(max_length=40)),
                ('age', models.PositiveSmallIntegerField()),
                ('author', models.ManyToManyField(to='betreiber.autor')),
            ],
            options={
                'verbose_name_plural': 'Bücher',
            },
        ),
        migrations.CreateModel(
            name='Seite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seitenzahl', models.PositiveSmallIntegerField()),
                ('text', models.CharField(max_length=255)),
                ('picture', models.CharField(max_length=150)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seiten', to='betreiber.buch')),
            ],
            options={
                'verbose_name_plural': 'Seiten',
                'ordering': ['seitenzahl'],
            },
        ),
        migrations.CreateModel(
            name='Sprache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('code', models.CharField(max_length=2)),
                ('flag', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Sprachen',
            },
        ),
        migrations.CreateModel(
            name='Sprachaufnahme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.CharField(max_length=150)),
                ('is_public', models.BooleanField(default=False)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='betreiber.sprache')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aufnahmen', to=settings.AUTH_USER_MODEL)),
                ('seite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='betreiber.seite')),
            ],
            options={
                'verbose_name_plural': 'Seiten',
            },
        ),
        migrations.CreateModel(
            name='Mandant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('street', models.CharField(max_length=50)),
                ('house_nr', models.CharField(max_length=5)),
                ('postal_code', models.CharField(max_length=5)),
                ('city', models.CharField(default='', max_length=30)),
                ('deletion', models.DateTimeField(blank=True, default=None, null=True)),
                ('country', models.CharField(choices=[('DE', 'Deutschland'), ('AT', 'Österreich'), ('CH', 'Schweiz')], default='DE', max_length=2)),
                ('manager', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='verwaltet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Mandanten',
            },
        ),
        migrations.CreateModel(
            name='Einladung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.UUIDField(unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('mandant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='betreiber.mandant')),
            ],
            options={
                'verbose_name_plural': 'Einladungen',
            },
        ),
        migrations.CreateModel(
            name='Aktivierungscode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True)),
                ('was_exported', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='betreiber.buch')),
                ('mandant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activated_codes', to='betreiber.mandant')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='mandant',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member', to='betreiber.mandant'),
        ),
        migrations.AddField(
            model_name='user',
            name='sprachen',
            field=models.ManyToManyField(blank=True, related_name='users', to='betreiber.sprache'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='sprachaufnahme',
            constraint=models.UniqueConstraint(fields=('language', 'recorded_by', 'seite'), name='SpezifischeSprachaufnahme'),
        ),
        migrations.AddConstraint(
            model_name='seite',
            constraint=models.UniqueConstraint(fields=('seitenzahl', 'book'), name='SpezifischeSeite'),
        ),
        migrations.AddConstraint(
            model_name='aktivierungscode',
            constraint=models.UniqueConstraint(fields=('mandant', 'book'), name='BuchPerMandant'),
        ),
    ]
